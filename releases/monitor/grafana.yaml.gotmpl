nameOverride: grafana

adminUser: '{{ .Values | getOrNil "grafana.username" | default "admin" }}'
adminPassword: '{{ .Values | getOrNil "grafana.password" | default "password" }}'

podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "false"

ingress:
  enabled: {{ .Values | getOrNil "grafana.ingress.enabled" | default false }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: '{{ .Values | getOrNil "ingress.closed.whitelist" | default "0.0.0.0/0" }}'
  hosts:
    - '{{ .Values | getOrNil "grafana.ingress.host" | default "grafana.example.com" }}'
  tls:
    - secretName: grafana-tls
      hosts:
        - '{{ .Values | getOrNil "grafana.ingress.host" | default "grafana.example.com" }}'

grafana.ini:
  server:
    root_url: 'https://{{ .Values | getOrNil "grafana.ingress.host" | default "" }}/'
  auth:
    disable_login_form: {{ .Values | getOrNil "grafana.disable_login_form" | default false }}
  auth.generic_oauth:
    enabled: true
    client_id: '{{ .Values | getOrNil "grafana.oic.client.id" | default "" }}'
    client_secret: '{{ .Values | getOrNil "grafana.oic.client.secret" | default "" }}'
    auth_url: '{{ .Values | getOrNil "grafana.oic.server.auth" | default "" }}'
    token_url: '{{ .Values | getOrNil "grafana.oic.server.token" | default "" }}'
    api_url: '{{ .Values | getOrNil "grafana.oic.server.userinfo" | default "" }}'
    scopes: "openid email"
    allow_sign_up: "true"

sidecar:
  dashboards:
    enabled: true

persistence:
  enabled: {{ .Values | getOrNil "grafana.persistence.enabled" | default false }}
  storageClassName: '{{ .Values | getOrNil "grafana.persistence.storageClass" | default "default" }}'
  size: '{{ .Values | getOrNil "grafana.persistence.storageSize" | default "10Gi" }}'

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: '{{ .Values | getOrNil "grafana.datasources.prometheus" | default "" }}'
        access: proxy
        isDefault: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    kube-cluster:
      # https://grafana.com/dashboards/9797
      gnetId: 9797
      revision: 7
      datasource: Prometheus
    kube-deployment:
      # https://grafana.com/dashboards/9679
      gnetId: 9679
      revision: 8
      datasource: Prometheus
    node-exporter:
      # https://grafana.com/dashboards/11074
      gnetId: 11074
      revision: 2
      datasource: Prometheus
    jmx-overview:
      # https://grafana.com/dashboards/11526
      gnetId: 11526
      revision: 4
      datasource: Prometheus
    nginx-ingress:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
      datasource: Prometheus
    argo-cd:
      url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
      datasource: Prometheus
    argo-rollouts:
      url: https://raw.githubusercontent.com/argoproj/argo-rollouts/master/examples/dashboard.json
      datasource: Prometheus
