nameOverride: keycloak

keycloak:
  username: '{{ .Values | getOrNil "keycloak.username" | default "admin" }}'
  password: '{{ .Values | getOrNil "keycloak.password" | default "password" }}'

  ingress:
    enabled: {{ .Values | getOrNil "keycloak.ingress.enabled" | default false }}
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: '{{ .Values | getOrNil "ingress.closed.whitelist" | default "0.0.0.0/0" }}'
    hosts:
      - '{{ .Values | getOrNil "keycloak.ingress.host" | default "keycloak.example.com" }}'
    tls:
      - secretName: keycloak-tls
        hosts:
          - '{{ .Values | getOrNil "keycloak.ingress.host" | default "keycloak.example.com" }}'

  extraEnv: |
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"

  extraVolumes: |
    - name: realm-demo-secret
      secret:
        secretName: realm-demo-secret

  extraVolumeMounts: |
    - name: realm-demo-secret
      mountPath: "/realm/"
      readOnly: true

  extraArgs: -Dkeycloak.import=/realm/demo.json

  persistence:
    deployPostgres: {{ .Values | getOrNil "keycloak.postgresql.enabled" | default false }}
    dbVendor: postgres
    dbHost: keycloak-postgresql
    dbPort: 5432
    dbUser: keycloak
    dbPassword: password

postgresql:
  enabled: {{ .Values | getOrNil "keycloak.postgresql.enabled" | default false }}
  postgresqlUsername: keycloak
  postgresqlPassword: password
  persistence:
    enabled: {{ .Values | getOrNil "keycloak.postgresql.persistence.enabled" | default false }}
    storageClass: '{{ .Values | getOrNil "keycloak.postgresql.persistence.storageClass" | default "default" }}'
    size: '{{ .Values | getOrNil "keycloak.postgresql.persistence.storageSize" | default "10Gi" }}'
