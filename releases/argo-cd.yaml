repositories:
  - name: argo
    url: https://argoproj.github.io/argo-helm

releases:
  - name: argo-cd
    namespace: argo
    chart: argo/argo-cd
    version: "1.5.1"
    installed: true
    wait: true
    hooks:
      - events: ["presync"]
        showlogs: true
        command: "/bin/sh"
        args: ["-c", "../bin/versions.sh", "argo/argo-cd"]
      - events: ["postsync"]
        showlogs: true
        command: "/bin/sh"
        args:
          [
            "-c",
            "kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo-rollouts/stable/manifests/install.yaml",
          ]
    values:
      - nameOverride: argocd

        server:
          extraArgs:
            insecure: true

          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hosts:
              - '{{ requiredEnv "ARGO_CD_INGRESS_HOST" }}'
            tls:
              - secretName: argocd-server-tls
                hosts:
                  - '{{ requiredEnv "ARGO_CD_INGRESS_HOST" }}'

          config:
            repositories: |
              - name: env-demo
                type: git
                url: https://github.com/opspresso/argocd-env-demo
              - name: stable
                type: helm
                url: https://kubernetes-charts.storage.googleapis.com
              - name: argo
                type: helm
                url: https://argoproj.github.io/argo-helm

        configs:
          secret:
            createSecret: true
            # argocdServerAdminPassword: "$(htpasswd -nbBC 10 '' 'password' | tr -d ':\n' | sed 's/$2y/$2a/')"
            argocdServerAdminPassword: '{{ requiredEnv "ARGO_CD_PASSWORD" }}'
