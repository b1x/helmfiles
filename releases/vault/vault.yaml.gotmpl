nameOverride: vault

replicaCount: {{ .Values | getOrNil "vault.replicaCount" | default 3 }}

vault:
  dev: {{ .Values | getOrNil "vault.dev" | default false }}
  config:
    storage:
      # s3:
      #   bucket: '{{ .Values | getOrNil "vault.storage.s3.bucket" | default "" }}'
      #   region: '{{ .Values | getOrNil "vault.storage.s3.region" | default "" }}'
      # etcd:
      #   address: '{{ .Values | getOrNil "vault.storage.etcd.address" | default "" }}'
      #   path: '{{ .Values | getOrNil "vault.storage.etcd.path" | default "" }}'
      #   etcd_api: '{{ .Values | getOrNil "vault.storage.etcd.etcd_api" | default "" }}'
      #   ha_enabled: '{{ .Values | getOrNil "vault.storage.etcd.ha_enabled" | default "" }}'
      consul:
        address: '{{ .Values | getOrNil "vault.storage.consul.address" | default "" }}'
        path: '{{ .Values | getOrNil "vault.storage.consul.path" | default "" }}'
  # extraEnv:
  #   - name: VAULT_API_ADDR
  #     value: 'https://{{ .Values | getOrNil "vault.ingress.host" | default "vault.example.com" }}'
  #   - name: VAULT_CLUSTER_ADDR
  #     value: 'https://{{ .Values | getOrNil "vault.ingress.host" | default "vault.example.com" }}'

consulAgent:
  join: consul.service.consul

podAnnotations:
  iam.amazonaws.com/role: '{{ .Values | getOrNil "vault.iam-role" | default "" }}'

ingress:
  enabled: {{ .Values | getOrNil "vault.ingress.enabled" | default false }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: '{{ .Values | getOrNil "ingress.closed.whitelist" | default "0.0.0.0/0" }}'
  hosts:
    - '{{ .Values | getOrNil "vault.ingress.host" | default "vault.example.com" }}'
  tls:
    - secretName: vault-tls
      hosts:
        - '{{ .Values | getOrNil "vault.ingress.host" | default "vault.example.com" }}'

serviceMonitor:
  enabled: {{ .Values | getOrNil "vault.metrics.enabled" | default false }}
  additionalLabels:
    prometheus-scraper: "default"
    release: prometheus-operator

# vault
# https://learn.hashicorp.com/vault/getting-started/deploy#initializing-the-vault

# k port-forward $(k get pod -n vault | grep Running | head -1 | cut -d' ' -f1) 8200 -n vault
# k logs $(k get pod -n vault | grep Running | head -1 | cut -d' ' -f1) -n vault -f

# export VAULT_ADDR='http://[::]:8200'

# vault operator init
# vault operator unseal
# vault login s.xxxxxxxx
