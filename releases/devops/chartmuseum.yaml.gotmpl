fullnameOverride: chartmuseum

replica:
  annotations:
    iam.amazonaws.com/role: '{{ .Values | getOrNil "chartmuseum.iam-role" | default "" }}'

env:
  open:
    DEBUG: false
    DISABLE_API: false
    DISABLE_METRICS: false
    ALLOW_OVERWRITE: true

    STORAGE: "amazon"
    STORAGE_AMAZON_BUCKET: '{{ .Values | getOrNil "chartmuseum.storage.amazon.bucket" | default "chartmuseum-bucket-name" }}'
    STORAGE_AMAZON_PREFIX: '{{ .Values | getOrNil "chartmuseum.storage.amazon.prefix" | default "/" }}'
    STORAGE_AMAZON_REGION: '{{ .Values | getOrNil "chartmuseum.storage.amazon.region" | default "ap-northeast-2" }}'

  # secret:
  #   BASIC_AUTH_USER: '{{ .Values | getOrNil "chartmuseum.basic.auth.user" | default "server" }}'
  #   BASIC_AUTH_PASS: '{{ .Values | getOrNil "chartmuseum.basic.auth.pass" | default "924426A5-DA22-4A10-9FB1-418761684372" }}'

ingress:
  enabled: {{ .Values | getOrNil "chartmuseum.ingress.enabled" | default false }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    ingress.kubernetes.io/proxy-body-size: 500m
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  hosts:
    - name: '{{ .Values | getOrNil "chartmuseum.ingress.host" | default "chartmuseum.example.com" }}'
      path: /
      tls: true
      tlsSecret: chartmuseum-tls
