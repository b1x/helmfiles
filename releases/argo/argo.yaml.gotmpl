nameOverride: argo

installCRD: true

controller:
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    iam.amazonaws.com/role: '{{ .Values | getOrNil "argo.iam-role" | default "" }}'

server:
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "false"

  ingress:
    enabled: {{ .Values | getOrNil "argo.ingress.enabled" | default false }}
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: '{{ .Values | getOrNil "ingress.closed.whitelist" | default "0.0.0.0/0" }}'
    hosts:
      - '{{ .Values | getOrNil "argo.ingress.host" | default "argo.example.com" }}'
    tls:
      - secretName: argo-ui-tls
        hosts:
          - '{{ .Values | getOrNil "argo.ingress.host" | default "argo.example.com" }}'

useDefaultArtifactRepo: true
useStaticCredentials: false

artifactRepository:
  s3:
    bucket: '{{ .Values | getOrNil "argo.bucket" | default "argo-bucket-name" }}'
    endpoint: s3.amazonaws.com
