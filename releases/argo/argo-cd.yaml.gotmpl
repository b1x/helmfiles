nameOverride: argocd

controller:
  metrics:
    enabled: true
#     serviceMonitor:
#       enabled: true

server:
  extraArgs:
    - --insecure

  metrics:
    enabled: true
#     serviceMonitor:
#       enabled: true

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - '{{ .Values | getOrNil "argo-cd.domain" | default "argo-cd.example.com" }}'
    tls:
      - secretName: argocd-server-tls
        hosts:
          - '{{ .Values | getOrNil "argo-cd.domain" | default "argo-cd.example.com" }}'

  config:
    url: 'https://{{ .Values | getOrNil "argo-cd.domain" | default "argo-cd.example.com" }}'
    repositories: |
      - name: env-demo
        type: git
        url: https://github.com/opspresso/argocd-env-demo
      - name: stable
        type: helm
        url: https://kubernetes-charts.storage.googleapis.com
      - name: argo
        type: helm
        url: https://argoproj.github.io/argo-helm
    oidc.config: |
      name: sso
      clientID: '{{ .Values | getOrNil "argo-cd.oic.client.id" | default "" }}'
      clientSecret: '{{ .Values | getOrNil "argo-cd.oic.client.secret" | default "" }}'
      issuer: '{{ .Values | getOrNil "argo-cd.oic.server.issuer" | default "" }}'

installCRDs: false

configs:
  secret:
    createSecret: true
    argocdServerAdminPassword: '{{ .Values | getOrNil "argo-cd.password" | default "password" }}'
    argocdServerAdminPasswordMtime: '{{ .Values | getOrNil "argo-cd.mod-time" | default "2020-02-02" }}'

# sso
# https://argoproj.github.io/argo-cd/operator-manual/user-management/#2-configure-argo-cd-for-sso
# https://argoproj.github.io/argo-cd/operator-manual/user-management/auth0/
