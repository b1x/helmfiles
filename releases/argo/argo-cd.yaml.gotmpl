nameOverride: argocd

installCRDs: true

controller:
  metrics:
    enabled: {{ .Values | getOrNil "argo-cd.metrics.enabled" | default false }}
    serviceMonitor:
      enabled: {{ .Values | getOrNil "argo-cd.metrics.enabled" | default false }}
      additionalLabels:
        release: prometheus-operator

  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

server:
  extraArgs:
    - --insecure

  metrics:
    enabled: {{ .Values | getOrNil "argo-cd.metrics.enabled" | default false }}
    serviceMonitor:
      enabled: {{ .Values | getOrNil "argo-cd.metrics.enabled" | default false }}
      additionalLabels:
        release: prometheus-operator

  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

  ingress:
    enabled: {{ .Values | getOrNil "argo-cd.ingress.enabled" | default false }}
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: '{{ .Values | getOrNil "ingress.closed.whitelist" | default "0.0.0.0/0" }}'
    hosts:
      - '{{ .Values | getOrNil "argo-cd.ingress.host" | default "argo-cd.example.com" }}'
    tls:
      - secretName: argocd-server-tls
        hosts:
          - '{{ .Values | getOrNil "argo-cd.ingress.host" | default "argo-cd.example.com" }}'

  config:
    url: 'https://{{ .Values | getOrNil "argo-cd.ingress.host" | default "argo-cd.example.com" }}'

    repositories: |
      - name: env-demo
        type: git
        url: https://github.com/opspresso/argocd-env-demo
      - name: stable
        type: helm
        url: https://kubernetes-charts.storage.googleapis.com
      - name: argo
        type: helm
        url: https://argoproj.github.io/argo-helm

    oidc.config: |
      name: SSO
      clientID: '{{ .Values | getOrNil "argo-cd.oic.client.id" | default "" }}'
      clientSecret: '{{ .Values | getOrNil "argo-cd.oic.client.secret" | default "" }}'
      issuer: '{{ .Values | getOrNil "argo-cd.oic.server.issuer" | default "" }}'
      requestedScopes:
        - openid
        - email
        - profile
        - roles

  rbacConfig:
    policy.default: role:readonly
    policy.csv: |
      g, "/admin", role:admin

# configs:
#   secret:
#     createSecret: true
#     argocdServerAdminPassword: '{{ .Values | getOrNil "argo-cd.password" | default "password" }}'
#     argocdServerAdminPasswordMtime: '{{ .Values | getOrNil "argo-cd.mod-time" | default "2020-02-02" }}'

# sso
# https://argoproj.github.io/argo-cd/operator-manual/user-management/#existing-oidc-provider
# https://argoproj.github.io/argo-cd/operator-manual/user-management/auth0/
