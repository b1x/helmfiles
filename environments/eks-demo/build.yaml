---
#  Source: cert-manager.yaml

filepath: cert-manager.yaml
repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: incubator
    url: https://kubernetes-charts-incubator.storage.googleapis.com
releases:
  - chart: jetstack/cert-manager
    version: v0.13.0
    wait: true
    installed: true
    hooks:
      - name: ""
        events:
          - presync
        command: /bin/sh
        args:
          - -c
          - kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.13/deploy/manifests/00-crds.yaml
        showlogs: true
    name: cert-manager
    namespace: kube-ingress
    values:
      - ingressShim:
          defaultIssuerKind: ClusterIssuer
          defaultIssuerName: letsencrypt-prod
        nameOverride: cert-manager
        rbac:
          create: true
  - chart: incubator/raw
    version: 0.1.0
    wait: true
    recreatePods: true
    force: true
    installed: true
    name: cert-manager-issuers
    namespace: kube-ingress
    values:
      - resources:
          - apiVersion: cert-manager.io/v1alpha2
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                email: me@nalbam.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                server: https://acme-v02.api.letsencrypt.org/directory
                solvers:
                  - http01:
                      ingress:
                        class: nginx
                    selector: {}
templates: {}
---
#  Source: nginx-ingress.yaml

filepath: nginx-ingress.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/nginx-ingress
    version: 1.30.0
    wait: true
    installed: true
    hooks:
      - name: ""
        events:
          - postsync
        command: /bin/sh
        args:
          - -c
          - ../../bin/nginx_ingress_route53.sh
        showlogs: true
    name: nginx-ingress
    namespace: kube-ingress
    values:
      - controller:
          config:
            use-forwarded-headers: "true"
          kind: DaemonSet
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/port: "10254"
                prometheus.io/scrape: "true"
          service:
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
          stats:
            enabled: true
        nameOverride: nginx-ingress
templates: {}
---
#  Source: kube2iam.yaml

filepath: kube2iam.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/kube2iam
    version: 2.1.0
    installed: true
    name: kube2iam
    namespace: kube-system
    values:
      - aws:
          region: ap-northeast-2
        extraArgs:
          auto-discover-base-arn: true
          auto-discover-default-role: true
        host:
          interface: eni+
          iptables: true
        nameOverride: kube2iam
        rbac:
          create: true
templates: {}
---
#  Source: metrics-server.yaml

filepath: metrics-server.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/metrics-server
    version: 2.9.0
    wait: true
    installed: true
    name: metrics-server
    namespace: kube-system
    values:
      - apiService:
          create: true
        args:
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname
        nameOverride: metrics-server
templates: {}
---
#  Source: kube-state-metrics.yaml

filepath: kube-state-metrics.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/kube-state-metrics
    version: 2.6.4
    wait: true
    installed: true
    name: kube-state-metrics
    namespace: kube-system
    values:
      - nameOverride: kube-state-metrics
templates: {}
---
#  Source: argo.yaml

filepath: argo.yaml
repositories:
  - name: argo
    url: https://argoproj.github.io/argo-helm
releases:
  - chart: argo/argo
    version: 0.6.5
    installed: true
    name: argo
    namespace: argo
    values:
      - artifactRepository:
          s3:
            bucket: eks-demo-argo
            endpoint: s3.amazonaws.com
        controller:
          podAnnotations:
            iam.amazonaws.com/role: eks-demo-argo
        nameOverride: argo
        ui:
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            enabled: true
            hosts:
              - argo.demo.mzdev.be
            tls:
              - hosts:
                  - argo.demo.mzdev.be
                secretName: argo-ui-tls
        useDefaultArtifactRepo: true
        useStaticCredentials: false
templates: {}
---
#  Source: argo-cd.yaml

filepath: argo-cd.yaml
repositories:
  - name: argo
    url: https://argoproj.github.io/argo-helm
releases:
  - chart: argo/argo-cd
    version: 1.7.3
    installed: true
    name: argocd
    namespace: argo-cd
    values:
      - configs:
          secret:
            argocdServerAdminPassword: $2a$10$RihNM/bmql87aKhSa/U0DOmTx5JDPl2byap07bLSNRtsEXFiq87E2
            createSecret: true
        nameOverride: argocd
        server:
          config:
            repositories: |
              - name: env-demo
                type: git
                url: https://github.com/opspresso/argocd-env-demo
              - name: stable
                type: helm
                url: https://kubernetes-charts.storage.googleapis.com
              - name: argo
                type: helm
                url: https://argoproj.github.io/argo-helm
          extraArgs:
            insecure: true
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            enabled: true
            hosts:
              - argocd.demo.mzdev.be
            tls:
              - hosts:
                  - argocd.demo.mzdev.be
                secretName: argocd-server-tls
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/port: "8083"
                prometheus.io/scrape: "true"
templates: {}
---
#  Source: argo-rollouts.yaml

filepath: argo-rollouts.yaml
repositories:
  - name: incubator
    url: https://kubernetes-charts-incubator.storage.googleapis.com
releases:
  - chart: incubator/raw
    version: 0.1.0
    recreatePods: true
    force: true
    installed: true
    hooks:
      - name: ""
        events:
          - postsync
        command: /bin/sh
        args:
          - -c
          - kubectl apply -n argo-rollouts -f https://raw.githubusercontent.com/argoproj/argo-rollouts/stable/manifests/install.yaml
        showlogs: true
    name: argo-rollouts
    namespace: argo-rollouts
    values:
      - resources:
          - apiVersion: v1
            data:
              NAME: argo-rollouts
            kind: ConfigMap
            metadata:
              labels:
                app: argo-rollouts
                app.kubernetes.io/name: argo-rollouts
              name: argo-rollouts
templates: {}
---
#  Source: prometheus.yaml

filepath: prometheus.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/prometheus
    version: 10.4.0
    installed: true
    name: prometheus
    namespace: monitor
    values:
      - alertmanager:
          enabled: false
          persistentVolume:
            enabled: false
        kubeStateMetrics:
          enabled: false
        nameOverride: prometheus
        server:
          enabled: true
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            enabled: true
            hosts:
              - prometheus.demo.mzdev.be
            tls:
              - hosts:
                  - prometheus.demo.mzdev.be
                secretName: prometheus-tls
          persistentVolume:
            enabled: false
templates: {}
---
#  Source: prometheus-adapter.yaml

filepath: prometheus-adapter.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/prometheus-adapter
    version: 2.0.1
    installed: true
    name: prometheus-adapter
    namespace: monitor
    values:
      - nameOverride: prometheus-adapter
        prometheus:
          port: 80
          url: http://prometheus-server
        rules:
          custom:
            - metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)
              name:
                as: ${1}_per_second
                matches: ^(.*)_total
              resources:
                overrides:
                  namespace:
                    resource: namespace
                  pod:
                    resource: pod
                  service:
                    resource: service
              seriesQuery: http_requests_total{namespace!="",pod!=""}
templates: {}
---
#  Source: grafana.yaml

filepath: grafana.yaml
repositories:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
releases:
  - chart: stable/grafana
    version: 4.6.3
    installed: true
    name: grafana
    namespace: monitor
    values:
      - adminPassword: password
        adminUser: admin
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
              - disableDeletion: false
                editable: true
                folder: ""
                name: default
                options:
                  path: /var/lib/grafana/dashboards/default
                orgId: 1
                type: file
        dashboards:
          default:
            argo-cd:
              datasource: Prometheus
              url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
            argo-rollouts:
              datasource: Prometheus
              url: https://raw.githubusercontent.com/argoproj/argo-rollouts/master/examples/dashboard.json
            jmx-overview:
              datasource: Prometheus
              gnetId: 11526
              revision: 4
            kube-cluster:
              datasource: Prometheus
              gnetId: 9797
              revision: 7
            kube-deployment:
              datasource: Prometheus
              gnetId: 9679
              revision: 8
            nginx-ingress:
              datasource: Prometheus
              url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - access: proxy
                isDefault: true
                name: Prometheus
                type: prometheus
                url: http://prometheus-server
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          enabled: true
          hosts:
            - grafana.demo.mzdev.be
          tls:
            - hosts:
                - grafana.demo.mzdev.be
              secretName: grafana-tls
        nameOverride: grafana
        persistence:
          enabled: false
templates: {}
---
#  Source: helmfile-all.yaml

filepath: helmfile-all.yaml
helmfiles:
  - path: releases/cert-manager.yaml
    environment: {}
  - path: releases/nginx-ingress.yaml
    environment: {}
  - path: releases/kube2iam.yaml
    environment: {}
  - path: releases/metrics-server.yaml
    environment: {}
  - path: releases/kube-state-metrics.yaml
    environment: {}
  - path: releases/argo.yaml
    environment: {}
  - path: releases/argo-cd.yaml
    environment: {}
  - path: releases/argo-rollouts.yaml
    environment: {}
  - path: releases/prometheus.yaml
    environment: {}
  - path: releases/prometheus-adapter.yaml
    environment: {}
  - path: releases/grafana.yaml
    environment: {}
templates: {}
