# common
cluster:
  name: eks-demo

aws:
  region: ap-northeast-2

base:
  domain: demo.mzdev.be

# kube-ingress
cert-manager:
  issuer-email: me@nalbam.com

nginx-ingress:
  controller:
    kind: DaemonSet
  external-dns:
    hostname: "*.demo.mzdev.be"
  metrics:
    enabled: true

nginx-ingress-internal:
  controller:
    kind: DaemonSet
  extra-sg: sg-0f66b330b0bb642ac
  external-dns:
    hostname: "*.in.demo.mzdev.be"
  metrics:
    enabled: true

external-dns:
  iam-role: eks-demo-worker-route53

# kube-system
cluster-autoscaler:
  iam-role: eks-demo-worker-asg

k8s-spot-termination-handler:
  slackUrl: ""

efs-provisioner:
  iam-role: eks-demo-worker-efs
  efsFileSystemId: fs-c4a680a5

# keycloak
keycloak:
  username: admin
  password: password
  ingress:
    enabled: true
    host: keycloak.in.demo.mzdev.be

# monitor
prometheus:
  persistence:
    enabled: true
    storageClass: efs
  kubeStateMetrics:
    enabled: true

grafana:
  username: admin
  password: password
  disable_login_form: true
  ingress:
    enabled: true
    host: grafana.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  oic:
    client:
      id: grafana
      secret: 1c6cb41d-bf1b-4c11-b94d-0d659fbc2b6f
    server:
      token: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/token
      auth: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/auth
      userinfo: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/userinfo

fluentd:
  host: elasticsearch-master.elastic.svc.cluster.local
  port: 9200

# elastic
elasticsearch:
  ingress:
    enabled: false
    host: elasticsearch.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  # esJavaOpts: "-Xmx512m -Xms512m"
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

kibana:
  ingress:
    enabled: true
    host: kibana.in.demo.mzdev.be
  resources:
    requests:
      cpu: 200m
      memory: 1G
    limits:
      cpu: 220m
      memory: 1G

# argo
argo:
  ingress:
    enabled: true
    host: argo.in.demo.mzdev.be
  bucket: eks-demo-argo-2
  iam-role: eks-demo-worker-bucket

argo-cd:
  username: admin
  # password: "$(htpasswd -nbBC 10 '' 'password' | tr -d ':\n' | sed 's/$2y/$2a/')"
  password: "$2a$10$RihNM/bmql87aKhSa/U0DOmTx5JDPl2byap07bLSNRtsEXFiq87E2"
  # mod-time: "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
  mod-time: "2020-03-14"
  metrics:
    enabled: true
  ingress:
    enabled: true
    host: argocd.in.demo.mzdev.be
  oic:
    client:
      id: argo-cd
      secret: d530a8f2-a9f4-4827-a6dc-808c3ed511a4
    server:
      issuer: https://keycloak.in.demo.mzdev.be/auth/realms/demo

# devops
chartmuseum:
  ingress:
    enabled: true
    host: chartmuseum.in.demo.mzdev.be
  iam-role: eks-demo-worker-bucket
  storage:
    amazon:
      region: ap-northeast-2
      bucket: eks-demo-chartmuseum-2

docker-registry:
  ingress:
    enabled: true
    host: registry.in.demo.mzdev.be
  iam-role: eks-demo-worker-bucket
  s3:
    region: ap-northeast-2
    bucket: eks-demo-registry-2

jenkins:
  ingress:
    enabled: true
    host: jenkins.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  oic:
    client:
      id: jenkins
      secret: c3ea5afc-24af-4a39-af09-77f2f024ae20
    server:
      token: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/token
      auth: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/auth
      userinfo: https://keycloak.in.demo.mzdev.be/auth/realms/demo/protocol/openid-connect/userinfo
  resources:
    requests:
      cpu: 500m
      memory: 2G
    limits:
      cpu: 550m
      memory: 2G

sonatype-nexus:
  ingress:
    enabled: true
    host: nexus.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  nexusBackup:
    persistence:
      enabled: true
      storageClass: efs
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

sonarqube:
  ingress:
    enabled: true
    host: sonarqube.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  postgresql:
    persistence:
      enabled: true
      storageClass: efs
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

harbor:
  admin:
    password: password
  ingress:
    host:
      core: harbor-core.in.demo.mzdev.be
      notary: harbor-notary.in.demo.mzdev.be
  iam-role: eks-demo-worker-bucket
  persistence:
    enabled: true
    storageClass: efs
  storage:
    amazon:
      region: ap-northeast-2
      bucket: eks-demo-harbor-2

# etcd
etcd:
  persistence:
    enabled: true
    storageClass: efs

# consul
consul:
  ingress:
    enabled: true
    host: consul.in.demo.mzdev.be
  persistence:
    enabled: true
    storageClass: efs

# vault
vault:
  dev: false
  replicaCount: 3
  ingress:
    enabled: false
    host: vault.in.demo.mzdev.be
  metrics:
    enabled: true
  iam-role: eks-demo-worker-bucket
  storage:
    # s3:
    #   region: ap-northeast-2
    #   bucket: eks-demo-vault-2
    # etcd:
    #   address: "http://etcd.etcd:2379"
    #   path: "vault/"
    #   etcd_api: "v3"
    #   ha_enabled: "true"
    consul:
      address: "consul:8500"
      path: "vault/"
  consulAgent:
    join: consul.service.consul
