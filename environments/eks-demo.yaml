# common
cluster:
  name: eks-demo

aws:
  region: ap-northeast-2

base:
  domain: demo.mzdev.be

# kube-ingress
cert-manager:
  issuer-email: me@nalbam.com

nginx-ingress-closed:
  controller:
    kind: DaemonSet
  aws-load-balancer:
    security-groups: sg-0fc56921320d0ecf3 # open
    # security-groups: sg-0442a60247418c3c7 # closed
    # ssl-cert: "arn:aws:acm:ap-northeast-2:147748575754:certificate/9def384c-3123-479e-84c8-57d46682fe94"
  external-dns:
    hostname: "*.closed.mzdev.be"
  metrics:
    enabled: true

nginx-ingress-open:
  controller:
    kind: DaemonSet
  aws-load-balancer:
    security-groups: sg-0fc56921320d0ecf3 # open
    # security-groups: sg-0442a60247418c3c7 # closed
    # ssl-cert: "arn:aws:acm:ap-northeast-2:147748575754:certificate/4581504a-cf26-4bac-a482-8025b9b14a5e"
  external-dns:
    hostname: "*.demo.mzdev.be"
  metrics:
    enabled: true

external-dns:
  iam-role: eks-demo-worker-route53

# kube-system
cluster-autoscaler:
  iam-role: eks-demo-worker-asg

k8s-spot-termination-handler:
  slackUrl: ""

efs-provisioner:
  iam-role: eks-demo-worker-efs
  efsFileSystemId: fs-b4a98fd5

# keycloak
keycloak:
  username: admin
  password: password
  ingress:
    enabled: true
    host: keycloak.closed.mzdev.be
  postgresql:
    enabled: true
    persistence:
      enabled: true
      storageClass: efs

# monitor
prometheus:
  scrape_interval: 30s
  persistence:
    enabled: true
    storageClass: efs
  kubeStateMetrics:
    enabled: true

grafana:
  username: admin
  password: password
  disable_login_form: true
  ingress:
    enabled: true
    host: grafana.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  datasources:
    # prometheus: http://prometheus-server:80
    prometheus: http://prometheus-operator-prometheus:9090
  oic:
    client:
      id: grafana
      secret: d20692ac-cc95-4502-8c32-30ca71c8e657
    server:
      token: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/token
      auth: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/auth
      userinfo: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/userinfo

fluentd:
  host: elasticsearch-master.elastic.svc.cluster.local
  port: 9200

# elastic
elasticsearch:
  ingress:
    enabled: false
    host: elasticsearch.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  # esJavaOpts: "-Xmx512m -Xms512m"
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

kibana:
  ingress:
    enabled: true
    host: kibana.closed.mzdev.be
  resources:
    requests:
      cpu: 200m
      memory: 1G
    limits:
      cpu: 220m
      memory: 1G

# argo
argo:
  ingress:
    enabled: true
    host: argo.closed.mzdev.be
  bucket: eks-demo-argo-2
  iam-role: eks-demo-worker-bucket

argo-cd:
  username: admin
  # password: "$(htpasswd -nbBC 10 '' 'password' | tr -d ':\n' | sed 's/$2y/$2a/')"
  password: "$2a$10$RihNM/bmql87aKhSa/U0DOmTx5JDPl2byap07bLSNRtsEXFiq87E2"
  # mod-time: "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
  mod-time: "2020-03-14"
  metrics:
    enabled: true
  ingress:
    enabled: true
    host: argocd.closed.mzdev.be
  oic:
    client:
      id: argo-cd
      secret: da4e275f-6804-4899-9bee-cb593019bda9
    server:
      issuer: https://keycloak.closed.mzdev.be/auth/realms/demo

# devops
archiva:
  ingress:
    enabled: true
    host: archiva.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs

chartmuseum:
  ingress:
    enabled: true
    host: chartmuseum.closed.mzdev.be
  iam-role: eks-demo-worker-bucket
  storage:
    amazon:
      region: ap-northeast-2
      bucket: eks-demo-chartmuseum-2

docker-registry:
  ingress:
    enabled: true
    host: registry.closed.mzdev.be
  iam-role: eks-demo-worker-bucket
  s3:
    region: ap-northeast-2
    bucket: eks-demo-registry-2

jenkins:
  ingress:
    enabled: true
    host: jenkins.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  oic:
    client:
      id: jenkins
      secret: 9f40e43a-0710-44a4-a1ca-f94bbef1018c
    server:
      token: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/token
      auth: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/auth
      userinfo: https://keycloak.closed.mzdev.be/auth/realms/demo/protocol/openid-connect/userinfo
  resources:
    requests:
      cpu: 500m
      memory: 2G
    limits:
      cpu: 550m
      memory: 2G

sonatype-nexus:
  statefulset: true
  ingress:
    enabled: true
    host: nexus.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  nexusBackup:
    persistence:
      enabled: true
      storageClass: efs
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

sonarqube:
  ingress:
    enabled: true
    host: sonarqube.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs
  postgresql:
    persistence:
      enabled: true
      storageClass: efs
  resources:
    requests:
      cpu: 300m
      memory: 2G
    limits:
      cpu: 330m
      memory: 2G

harbor:
  admin:
    password: password
  ingress:
    host:
      core: harbor-core.closed.mzdev.be
      notary: harbor-notary.closed.mzdev.be
  iam-role: eks-demo-worker-bucket
  persistence:
    enabled: true
    storageClass: efs
  storage:
    amazon:
      region: ap-northeast-2
      bucket: eks-demo-harbor-2

# atlantis
atlantis:
  orgWhitelist: github.org/mzcdev/*
  ingress:
    host:
      core: atlantis.closed.mzdev.be
      notary: atlantis.closed.mzdev.be
  iam-role: eks-demo-worker-admin

# etcd
etcd:
  persistence:
    enabled: true
    storageClass: efs

# consul
consul:
  ingress:
    enabled: true
    host: consul.closed.mzdev.be
  persistence:
    enabled: true
    storageClass: efs

# vault
vault:
  dev: false
  replicaCount: 3
  ingress:
    enabled: false
    host: vault.closed.mzdev.be
  metrics:
    enabled: true
  iam-role: eks-demo-worker-bucket
  storage:
    # s3:
    #   region: ap-northeast-2
    #   bucket: eks-demo-vault-2
    # etcd:
    #   address: "http://etcd.etcd:2379"
    #   path: "vault/"
    #   etcd_api: "v3"
    #   ha_enabled: "true"
    consul:
      address: "consul:8500"
      path: "vault/"
  consulAgent:
    join: consul.service.consul
